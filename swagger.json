{
  "swagger": "2.0",
  "info": {
    "title": "PartFinder API",
    "description": "PartFinder API documentation",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/character": {
      "post": {
        "description": "Creates a new character given User authentication ID and character stats",
        "parameters": [
          {
            "name": "authentication ID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "stats": {
                  "example": "[{stat:Name,value:Value}]"
                },
                "name": {
                  "example": "character_name"
                },
                "image": {
                  "example": "image_path"
                },
                "class": {
                  "example": "character_class"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Returns all characters created by given User/character given its ID",
        "parameters": [
          {
            "name": "authentication ID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Modify character name, image, class, stats or inventory",
        "parameters": [
          {
            "name": "authentication ID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "characterID"
                },
                "name": {
                  "example": "new_character_name"
                },
                "image": {
                  "example": "new_image_path"
                },
                "class": {
                  "example": "new_character_class"
                },
                "stats": {
                  "example": "[stat:Name,value:NewValue]"
                },
                "inventory": {
                  "example": "[new_item1,new_item2]"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Delete a character given its ID",
        "parameters": [
          {
            "name": "authentication ID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "characterID"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/group": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "group_name"
                },
                "description": {
                  "example": "group_description"
                },
                "size": {
                  "example": "5"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Get all groups in database/group given its code",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Modify group name,size,description",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "group_id"
                },
                "description": {
                  "example": "group_newDescription"
                },
                "size": {
                  "example": "4"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Delete group",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "group_id"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/group/{user}": {
      "get": {
        "description": "Get all groups of a given User",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/group/accept": {
      "put": {
        "description": "As the group's master: accept a join request and add the player to the group",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "group_id"
                },
                "user": {
                  "example": "user_id"
                },
                "character": {
                  "example": "character_id"
                },
                "request": {
                  "example": "request_id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/group/decline": {
      "put": {
        "description": "As the group's master: decline a join request and remove the request from the list",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "group_id"
                },
                "request": {
                  "example": "request_id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/group/remove": {
      "put": {
        "description": "As the group's master: remove a player from the group",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "group_id"
                },
                "playerid": {
                  "example": "player_id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/group/request": {
      "put": {
        "description": "Create a join request to a group",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "character": {
                  "example": "character_id"
                },
                "id": {
                  "example": "group_id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/group/chat": {
      "put": {
        "description": "Create a new message in the group chat",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "group_id"
                },
                "message": {
                  "example": "message_body"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Get all messages sent in the group chat",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/group/chat/roll": {
      "put": {
        "description": "call dice API and send a new message in the group chat with the response as the message body",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "AuthenticationCookie",
            "in": "header",
            "type": "string"
          },
          {
            "name": "num",
            "in": "query",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "grouo_id"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "description": "Register a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {

                "username": {
                  "example": "username"
                },
                "email": {
                  "example": "email"
                },
                "password": {
                  "example": "password"
                },
                "image": {
                  "example": "image_path"
                },
                "description": {
                  "example": "user_description"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User added"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "description": "Log into a registered account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "input": {
                  "example": "username/email"
                },
                "password": {
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "description": "Get all users/user given its ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Modify User username,image,description",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "user_id"
                },
                "username": {
                  "example": "new_username"
                },
                "image": {
                  "example": "new_image_path"
                },
                "description": {
                  "example": "new_user_description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/rep/up": {
      "put": {
        "description": "Increase another user reputation by 1",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "user_id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/rep/down": {
      "put": {
        "description": "Decrease another user reputation by 1",
        "parameters": [
          {
            "name": "authenticationID",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "user_id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/dice": {
      "get": {
        "description": "Simulate dice roll",
        "parameters": [
          {
            "name": "num",
            "in": "query",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}